{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/Projects/hydroforce/signature-construction/src/app/home/Header.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Header.css';\n\nexport default function Header() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleNavbar = () => setIsOpen(!isOpen);\n\n  return (\n    <header className=\"header\">\n      <nav className=\"navbar navbar-expand-lg navbar-dark custom-navbar\">\n        <img src=\"/logo_sc.png\" alt=\"Logo\" className=\"header-logo img-responsive\" />\n\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          onClick={toggleNavbar}\n          aria-controls=\"navbarCollapse\"\n          aria-expanded={isOpen}\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className={`collapse navbar-collapse ${isOpen ? 'show' : ''}`} id=\"navbarCollapse\">\n          <ul className=\"navbar-nav ms-auto\">\n            <li className=\"nav-item\">\n              <a href=\"/\" className=\"nav-link\">Home</a>\n            </li>\n            <li className=\"nav-item\">\n              <a href=\"#services\" className=\"nav-link\">Services</a>\n            </li>\n            <li className=\"nav-item\">\n              <a href=\"#projects\" className=\"nav-link\">Projects</a>\n            </li>\n            <li className=\"nav-item\">\n              <a href=\"#contact\" className=\"nav-link\">Contact</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;;;AAMe,SAAS;;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,yKAAQ,EAAC;IAErC,MAAM,eAAe,IAAM,UAAU,CAAC;IAEtC,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,KAAI;oBAAe,KAAI;oBAAO,WAAU;;;;;;8BAE7C,6LAAC;oBACC,WAAU;oBACV,MAAK;oBACL,SAAS;oBACT,iBAAc;oBACd,iBAAe;oBACf,cAAW;8BAEX,cAAA,6LAAC;wBAAK,WAAU;;;;;;;;;;;8BAGlB,6LAAC;oBAAI,WAAW,AAAC,4BAAgD,OAArB,SAAS,SAAS;oBAAM,IAAG;8BACrE,cAAA,6LAAC;wBAAG,WAAU;;0CACZ,6LAAC;gCAAG,WAAU;0CACZ,cAAA,6LAAC;oCAAE,MAAK;oCAAI,WAAU;8CAAW;;;;;;;;;;;0CAEnC,6LAAC;gCAAG,WAAU;0CACZ,cAAA,6LAAC;oCAAE,MAAK;oCAAY,WAAU;8CAAW;;;;;;;;;;;0CAE3C,6LAAC;gCAAG,WAAU;0CACZ,cAAA,6LAAC;oCAAE,MAAK;oCAAY,WAAU;8CAAW;;;;;;;;;;;0CAE3C,6LAAC;gCAAG,WAAU;0CACZ,cAAA,6LAAC;oCAAE,MAAK;oCAAW,WAAU;8CAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOtD;GAxCwB;KAAA","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/Projects/hydroforce/signature-construction/src/app/home/Services.tsx"],"sourcesContent":["\"use client\"; \n\nimport React, { useEffect } from \"react\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport Scrollbar from \"smooth-scrollbar\";\nimport \"./Services.css\"\nconst Services = () => {\n  useEffect(() => {\n    gsap.registerPlugin(ScrollTrigger);\n    const bodyScrollBar = Scrollbar.init(document.body, {\n      damping: 0.1,\n      delegateTo: document,\n    });\n    ScrollTrigger.scrollerProxy(\".scroller\", {\n      scrollTop(value?: number) {\n        if (typeof value === \"number\") {\n          bodyScrollBar.scrollTop = value;\n        }\n        return bodyScrollBar.scrollTop ?? 0;\n      },\n    });\n\n    bodyScrollBar.addListener(ScrollTrigger.update);\n    gsap.set(\".panel\", {\n      zIndex: (i, _target, targets) => targets.length - i,\n    });\n\n    const images = gsap.utils.toArray<HTMLElement>(\".panel:not(.purple)\");\n\n    images.forEach((image, i) => {\n      gsap\n        .timeline({\n          scrollTrigger: {\n            trigger: \"section.black\",\n            scroller: \".scroller\",\n            start: () => \"top -\" + window.innerHeight * (i + 0.5),\n            end: () => \"+=\" + window.innerHeight,\n            scrub: true,\n            toggleActions: \"play none reverse none\",\n            invalidateOnRefresh: true,\n          },\n        })\n        .to(image, { height: 0 });\n    });\n    gsap.set(\".panel-text\", {\n      zIndex: (i, _target, targets) => targets.length - i,\n    });\n\n    const texts = gsap.utils.toArray<HTMLElement>(\".panel-text\");\n\n    texts.forEach((text, i) => {\n      gsap\n        .timeline({\n          scrollTrigger: {\n            trigger: \"section.black\",\n            scroller: \".scroller\",\n            start: () => \"top -\" + window.innerHeight * i,\n            end: () => \"+=\" + window.innerHeight,\n            scrub: true,\n            toggleActions: \"play none reverse none\",\n            invalidateOnRefresh: true,\n          },\n        })\n        .to(text, { duration: 0.33, opacity: 1, y: \"50%\" })\n        .to(text, { duration: 0.33, opacity: 0, y: \"0%\" }, 0.66);\n    });\n    ScrollTrigger.create({\n      trigger: \"section.black\",\n      scroller: \".scroller\",\n      scrub: true,\n      markers: true,\n      pin: true,\n      start: \"top top\",\n      end: () => \"+=\" + (images.length + 1) * window.innerHeight,\n      invalidateOnRefresh: true,\n    });\n    return () => {\n      ScrollTrigger.getAll().forEach((t) => t.kill());\n      bodyScrollBar.destroy();\n    };\n  }, []);\n\n  return (\n    \n\t\t<div className=\"scroller\">\n      \n        <section className=\"orange\">\n            <div className=\"text\">This is some text inside of a div block.</div>\n        </section>\n  \n        <section className=\"black\">\n    \n            <div className=\"text-wrap\">          \n      <div className=\"panel-text blue-text\">Blue</div> \n      <div className=\"panel-text red-text\">Red</div>   \n      <div className=\"panel purple\"></div> \n            </div>\n    \n        </section>\n  \n        <section className=\"blue\"></section>\n  \n    </div>\n  );\n};\n\nexport default Services;\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;;AAOA,MAAM,WAAW;;IACf,IAAA,0KAAS;8BAAC;YACR,2JAAI,CAAC,cAAc,CAAC,yJAAa;YACjC,MAAM,gBAAgB,0KAAS,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE;gBAClD,SAAS;gBACT,YAAY;YACd;YACA,yJAAa,CAAC,aAAa,CAAC,aAAa;gBACvC,WAAU,KAAc;oBACtB,IAAI,OAAO,UAAU,UAAU;wBAC7B,cAAc,SAAS,GAAG;oBAC5B;wBACO;oBAAP,OAAO,CAAA,2BAAA,cAAc,SAAS,cAAvB,sCAAA,2BAA2B;gBACpC;YACF;YAEA,cAAc,WAAW,CAAC,yJAAa,CAAC,MAAM;YAC9C,2JAAI,CAAC,GAAG,CAAC,UAAU;gBACjB,MAAM;0CAAE,CAAC,GAAG,SAAS,UAAY,QAAQ,MAAM,GAAG;;YACpD;YAEA,MAAM,SAAS,2JAAI,CAAC,KAAK,CAAC,OAAO,CAAc;YAE/C,OAAO,OAAO;sCAAC,CAAC,OAAO;oBACrB,2JAAI,CACD,QAAQ,CAAC;wBACR,eAAe;4BACb,SAAS;4BACT,UAAU;4BACV,KAAK;sDAAE,IAAM,UAAU,OAAO,WAAW,GAAG,CAAC,IAAI,GAAG;;4BACpD,GAAG;sDAAE,IAAM,OAAO,OAAO,WAAW;;4BACpC,OAAO;4BACP,eAAe;4BACf,qBAAqB;wBACvB;oBACF,GACC,EAAE,CAAC,OAAO;wBAAE,QAAQ;oBAAE;gBAC3B;;YACA,2JAAI,CAAC,GAAG,CAAC,eAAe;gBACtB,MAAM;0CAAE,CAAC,GAAG,SAAS,UAAY,QAAQ,MAAM,GAAG;;YACpD;YAEA,MAAM,QAAQ,2JAAI,CAAC,KAAK,CAAC,OAAO,CAAc;YAE9C,MAAM,OAAO;sCAAC,CAAC,MAAM;oBACnB,2JAAI,CACD,QAAQ,CAAC;wBACR,eAAe;4BACb,SAAS;4BACT,UAAU;4BACV,KAAK;sDAAE,IAAM,UAAU,OAAO,WAAW,GAAG;;4BAC5C,GAAG;sDAAE,IAAM,OAAO,OAAO,WAAW;;4BACpC,OAAO;4BACP,eAAe;4BACf,qBAAqB;wBACvB;oBACF,GACC,EAAE,CAAC,MAAM;wBAAE,UAAU;wBAAM,SAAS;wBAAG,GAAG;oBAAM,GAChD,EAAE,CAAC,MAAM;wBAAE,UAAU;wBAAM,SAAS;wBAAG,GAAG;oBAAK,GAAG;gBACvD;;YACA,yJAAa,CAAC,MAAM,CAAC;gBACnB,SAAS;gBACT,UAAU;gBACV,OAAO;gBACP,SAAS;gBACT,KAAK;gBACL,OAAO;gBACP,GAAG;0CAAE,IAAM,OAAO,CAAC,OAAO,MAAM,GAAG,CAAC,IAAI,OAAO,WAAW;;gBAC1D,qBAAqB;YACvB;YACA;sCAAO;oBACL,yJAAa,CAAC,MAAM,GAAG,OAAO;8CAAC,CAAC,IAAM,EAAE,IAAI;;oBAC5C,cAAc,OAAO;gBACvB;;QACF;6BAAG,EAAE;IAEL,qBAEA,6LAAC;QAAI,WAAU;;0BAET,6LAAC;gBAAQ,WAAU;0BACf,cAAA,6LAAC;oBAAI,WAAU;8BAAO;;;;;;;;;;;0BAG1B,6LAAC;gBAAQ,WAAU;0BAEf,cAAA,6LAAC;oBAAI,WAAU;;sCACrB,6LAAC;4BAAI,WAAU;sCAAuB;;;;;;sCACtC,6LAAC;4BAAI,WAAU;sCAAsB;;;;;;sCACrC,6LAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;0BAKb,6LAAC;gBAAQ,WAAU;;;;;;;;;;;;AAI3B;GAlGM;KAAA;uCAoGS","debugId":null}}]
}