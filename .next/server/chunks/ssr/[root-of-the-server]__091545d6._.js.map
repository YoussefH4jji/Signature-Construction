{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/Projects/hydroforce/signature-construction/src/app/TextType.jsx"],"sourcesContent":["import \"./TextType.css\";\n\n\"use client\";\n\nimport { useEffect, useRef, useState, createElement, useMemo, useCallback } from \"react\";\nimport { gsap } from \"gsap\";\nimport \"./TextType.css\";\n\nconst TextType = ({\n  text,\n  as: Component = \"div\",\n  typingSpeed = 50,\n  initialDelay = 0,\n  pauseDuration = 2000,\n  deletingSpeed = 30,\n  loop = true,\n  className = \"\",\n  showCursor = true,\n  hideCursorWhileTyping = false,\n  cursorCharacter = \"|\",\n  cursorClassName = \"\",\n  cursorBlinkDuration = 0.5,\n  textColors = [],\n  variableSpeed,\n  onSentenceComplete,\n  startOnVisible = false,\n  reverseMode = false,\n  ...props\n}) => {\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [currentCharIndex, setCurrentCharIndex] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [currentTextIndex, setCurrentTextIndex] = useState(0);\n  const [isVisible, setIsVisible] = useState(!startOnVisible);\n  const cursorRef = useRef(null);\n  const containerRef = useRef(null);\n\n  const textArray = useMemo(() => (Array.isArray(text) ? text : [text]), [text]);\n\n  const getRandomSpeed = useCallback(() => {\n    if (!variableSpeed) return typingSpeed;\n    const { min, max } = variableSpeed;\n    return Math.random() * (max - min) + min;\n  }, [variableSpeed, typingSpeed]);\n\n  const getCurrentTextColor = () => {\n    if (textColors.length === 0) return \"#ffffff\";\n    return textColors[currentTextIndex % textColors.length];\n  };\n\n  useEffect(() => {\n    if (!startOnVisible || !containerRef.current) return;\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setIsVisible(true);\n          }\n        });\n      },\n      { threshold: 0.1 }\n    );\n\n    observer.observe(containerRef.current);\n    return () => observer.disconnect();\n  }, [startOnVisible]);\n\n  useEffect(() => {\n    if (showCursor && cursorRef.current) {\n      gsap.set(cursorRef.current, { opacity: 1 });\n      gsap.to(cursorRef.current, {\n        opacity: 0,\n        duration: cursorBlinkDuration,\n        repeat: -1,\n        yoyo: true,\n        ease: \"power2.inOut\",\n      });\n    }\n  }, [showCursor, cursorBlinkDuration]);\n\n  useEffect(() => {\n    if (!isVisible) return;\n\n    let timeout;\n    const currentText = textArray[currentTextIndex];\n    const processedText = reverseMode\n      ? currentText.split(\"\").reverse().join(\"\")\n      : currentText;\n\n    const executeTypingAnimation = () => {\n      if (isDeleting) {\n        if (displayedText === \"\") {\n          setIsDeleting(false);\n          if (currentTextIndex === textArray.length - 1 && !loop) {\n            return;\n          }\n\n          if (onSentenceComplete) {\n            onSentenceComplete(textArray[currentTextIndex], currentTextIndex);\n          }\n\n          setCurrentTextIndex((prev) => (prev + 1) % textArray.length);\n          setCurrentCharIndex(0);\n          timeout = setTimeout(() => { }, pauseDuration);\n        } else {\n          timeout = setTimeout(() => {\n            setDisplayedText((prev) => prev.slice(0, -1));\n          }, deletingSpeed);\n        }\n      } else {\n        if (currentCharIndex < processedText.length) {\n          timeout = setTimeout(\n            () => {\n              setDisplayedText(\n                (prev) => prev + processedText[currentCharIndex]\n              );\n              setCurrentCharIndex((prev) => prev + 1);\n            },\n            variableSpeed ? getRandomSpeed() : typingSpeed\n          );\n        } else if (textArray.length > 1) {\n          timeout = setTimeout(() => {\n            setIsDeleting(true);\n          }, pauseDuration);\n        }\n      }\n    };\n\n    if (currentCharIndex === 0 && !isDeleting && displayedText === \"\") {\n      timeout = setTimeout(executeTypingAnimation, initialDelay);\n    } else {\n      executeTypingAnimation();\n    }\n\n    return () => clearTimeout(timeout);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    currentCharIndex,\n    displayedText,\n    isDeleting,\n    typingSpeed,\n    deletingSpeed,\n    pauseDuration,\n    textArray,\n    currentTextIndex,\n    loop,\n    initialDelay,\n    isVisible,\n    reverseMode,\n    variableSpeed,\n    onSentenceComplete,\n  ]);\n\n  const shouldHideCursor =\n    hideCursorWhileTyping &&\n    (currentCharIndex < textArray[currentTextIndex].length || isDeleting);\n\n  return createElement(\n    Component,\n    {\n      ref: containerRef,\n      className: `text-type ${className}`,\n      ...props,\n    },\n    <span\n      className=\"text-type__content\"\n      style={{ color: getCurrentTextColor() }}\n    >\n      {displayedText}\n    </span>,\n    showCursor && (\n      <span\n        ref={cursorRef}\n        className={`text-type__cursor ${cursorClassName} ${shouldHideCursor ? \"text-type__cursor--hidden\" : \"\"}`}\n      >\n        {cursorCharacter}\n      </span>\n    )\n  );\n};\n\nexport default TextType;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/Projects/hydroforce/signature-construction/src/app/page.tsx"],"sourcesContent":["import Image from \"next/image\";\nimport TextType from './TextType';\nimport React from \"react\";\n\nconst Home: React.FC = () => {\n  return (\n    <div className='home-container'>\n      <div className=\"home-content\">\n        <h1 className='home-page-title'>\n          From Vision to Reality â€” Turnkey Interiors for Every Space\n        </h1>\n        <h3>\n          We Design, Build, and Deliver complete interiors. One partner. One contract. Seamless results.\n        </h3>\n        <TextType\n          text={[\"Text typing effect\", \"for your websites\", \"Happy coding!\"]}\n          typingSpeed={75}\n          pauseDuration={1500}\n          showCursor={true}\n          cursorCharacter=\"|\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":[],"mappings":";;;;;AACA;;;AAGA,MAAM,OAAiB;IACrB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAkB;;;;;;8BAGhC,8OAAC;8BAAG;;;;;;8BAGJ,8OAAC,kIAAQ;oBACP,MAAM;wBAAC;wBAAsB;wBAAqB;qBAAgB;oBAClE,aAAa;oBACb,eAAe;oBACf,YAAY;oBACZ,iBAAgB;;;;;;;;;;;;;;;;;AAK1B;uCAEe","debugId":null}}]
}